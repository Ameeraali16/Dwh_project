MERGE INTO ECOMMERCE_DB.STAR_SCHEMA.FACT_SALES_RETURN AS TARGET
USING (
    SELECT 
        ROW_NUMBER() OVER (ORDER BY R.RETURN_ID) AS FACT_RETURN_ID,
        
        -- Lookups to get surrogate keys from dimension tables
        DS.STORE_ID,
        DC.CUSTOMER_ID,
        DO.ORDER_ID,
        DP.PRODUCT_ID,
        DR.REVIEW_ID,  -- Note: Assuming DR.REVIEW_ID after your rename

        DRET.RETURN_ID,
        
        DD_ORDER.DATE_ID AS ORDER_DATE_ID,
        DD_RETURN.DATE_ID AS RETURN_DATE_ID,
        DD_DELIVERY.DATE_ID AS DELIVERY_DATE_ID,

        O.TOTAL_AMOUNT,
        R.REFUND_AMOUNT,

        -- Quantities and prices from ORDER_ITEMS
        OI.QUANTITY AS QUANTITY_ORDERED,
        -- Estimate refunded quantity (rounded)
        ROUND(COALESCE(R.REFUND_AMOUNT, 0) / NULLIF(OI.ITEM_PRICE, 0)) AS QUANTITY_REFUNDED,

        -- Calculated Fields
        CASE 
            WHEN R.REFUND_AMOUNT >= O.TOTAL_AMOUNT THEN TRUE 
            ELSE FALSE 
        END AS FULL_REFUND,

        ABS(DATEDIFF('day', O.ORDER_DATE, R.RETURN_DATE)) AS DAYS_TO_RETURN,

        CASE 
            WHEN O.TOTAL_AMOUNT > 0 THEN ((R.REFUND_AMOUNT / O.TOTAL_AMOUNT)*100)
            ELSE 0 
        END AS REFUND_PERCENTAGE,

        CASE 
            WHEN RR.RETURN_COUNT > 1 THEN TRUE 
            ELSE FALSE 
        END AS IS_REPEAT_RETURN_CUSTOMER

    FROM ECOMMERCE_DB.ECOMMERCE_SCHEMA.RETURNS R

    JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.ORDERS O 
        ON R.ORDER_ID = O.ORDER_ID

    JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.CUSTOMERS C 
        ON O.CUSTOMER_ID = C.CUSTOMER_ID

    JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.PRODUCTS P 
        ON R.PRODUCT_ID = P.PRODUCT_ID

    JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.REVIEWS V 
        ON P.PRODUCT_ID = V.PRODUCT_ID

    JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.INVENTORY I 
        ON P.PRODUCT_ID = I.PRODUCT_ID

    JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.STORES S
        ON I.STORE_ID = S.STORE_ID

    -- Join ORDER_ITEMS to get quantity and price info
    JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.ORDER_ITEMS OI
        ON O.ORDER_ID = OI.ORDER_ID AND P.PRODUCT_ID = OI.PRODUCT_ID

    -- Dimension joins (natural keys are used to get surrogate keys)
    JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_CUSTOMER DC 
        ON C.CUSTOMER_ID = DC.CUSTOMER_ID

    JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_PRODUCT DP 
        ON P.PRODUCT_ID = DP.PRODUCT_ID

    JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_ORDER DO 
        ON O.ORDER_ID = DO.ORDER_ID

    LEFT JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_STORE DS 
        ON S.STORE_ID = DS.STORE_ID 

    LEFT JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_REVIEW DR 
        ON V.REVIEW_ID = DR.REVIEW_ID 

    LEFT JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_RETURN DRET 
        ON R.RETURN_ID = DRET.RETURN_ID

    LEFT JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_DATE DD_ORDER 
        ON TO_DATE(O.ORDER_DATE) = DD_ORDER.DATE_ID

    LEFT JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_DATE DD_RETURN 
        ON TO_DATE(R.RETURN_DATE) = DD_RETURN.DATE_ID

    LEFT JOIN ECOMMERCE_DB.STAR_SCHEMA.DIM_DATE DD_DELIVERY 
        ON TO_DATE(O.ORDER_DATE) = DD_DELIVERY.DATE_ID  

    -- Identify repeat return customers
    LEFT JOIN (
        SELECT 
            O.CUSTOMER_ID,
            COUNT(*) AS RETURN_COUNT
        FROM ECOMMERCE_DB.ECOMMERCE_SCHEMA.RETURNS R
        JOIN ECOMMERCE_DB.ECOMMERCE_SCHEMA.ORDERS O 
            ON R.ORDER_ID = O.ORDER_ID
        GROUP BY O.CUSTOMER_ID
    ) RR ON RR.CUSTOMER_ID = C.CUSTOMER_ID

) AS SRC

ON TARGET.RETURN_ID = SRC.RETURN_ID

WHEN NOT MATCHED THEN
INSERT (
    FACT_RETURN_ID,
    STORE_ID,
    CUSTOMER_ID,
    ORDER_ID,
    PRODUCT_ID,
    REVIEW_ID,
    RETURN_ID,
    ORDER_DATE_ID,
    RETURN_DATE_ID,
    DELIVERY_DATE_ID,
    TOTAL_AMOUNT,
    REFUND_AMOUNT,
    QUANTITY_ORDERED,
    QUANTITY_REFUNDED,
    FULL_REFUND,
    DAYS_TO_RETURN,
    REFUND_PERCENTAGE,
    IS_REPEAT_RETURN_CUSTOMER
)
VALUES (
    SRC.FACT_RETURN_ID,
    SRC.STORE_ID,
    SRC.CUSTOMER_ID,
    SRC.ORDER_ID,
    SRC.PRODUCT_ID,
    SRC.REVIEW_ID,
    SRC.RETURN_ID,
    SRC.ORDER_DATE_ID,
    SRC.RETURN_DATE_ID,
    SRC.DELIVERY_DATE_ID,
    SRC.TOTAL_AMOUNT,
    SRC.REFUND_AMOUNT,
    SRC.QUANTITY_ORDERED,
    SRC.QUANTITY_REFUNDED,
    SRC.FULL_REFUND,
    SRC.DAYS_TO_RETURN,
    SRC.REFUND_PERCENTAGE,
    SRC.IS_REPEAT_RETURN_CUSTOMER
);
