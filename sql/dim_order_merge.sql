MERGE INTO ECOMMERCE_DB.STAR_SCHEMA.DIM_ORDER tgt
USING (
  WITH orders_deduped AS (
    SELECT *
    FROM ECOMMERCE_DB.ECOMMERCE_SCHEMA.ORDERS
    QUALIFY ROW_NUMBER() OVER (PARTITION BY ORDER_ID ORDER BY ORDER_ID) = 1
  ),
  payments_deduped AS (
    SELECT *
    FROM ECOMMERCE_DB.ECOMMERCE_SCHEMA.PAYMENTS
    QUALIFY ROW_NUMBER() OVER (PARTITION BY ORDER_ID ORDER BY PAYMENT_DATE DESC) = 1
  ),
  shipments_deduped AS (
    SELECT *
    FROM ECOMMERCE_DB.ECOMMERCE_SCHEMA.SHIPMENTS
    QUALIFY ROW_NUMBER() OVER (PARTITION BY ORDER_ID ORDER BY SHIPMENT_DATE DESC) = 1
  )
  SELECT 
      o.ORDER_ID,
      p.PAYMENT_METHOD,
      s.DELIVERY_STATUS,
      s.SHIPMODE AS SHIP_MODE
  FROM orders_deduped o
  LEFT JOIN payments_deduped p ON o.ORDER_ID = p.ORDER_ID
  LEFT JOIN shipments_deduped s ON o.ORDER_ID = s.ORDER_ID
) src
ON tgt.ORDER_ID = src.ORDER_ID
WHEN MATCHED THEN UPDATE SET
    tgt.PAYMENT_METHOD = src.PAYMENT_METHOD,
    tgt.DELIVERY_STATUS = src.DELIVERY_STATUS,
    tgt.SHIP_MODE = src.SHIP_MODE
WHEN NOT MATCHED THEN INSERT (
    ORDER_ID, PAYMENT_METHOD, DELIVERY_STATUS, SHIP_MODE
) VALUES (
    src.ORDER_ID, src.PAYMENT_METHOD, src.DELIVERY_STATUS, src.SHIP_MODE
);
